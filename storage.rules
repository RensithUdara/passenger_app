rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImageFile() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    function isValidDocumentFile() {
      return request.resource.contentType.matches('(image/.*|application/pdf)') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    // User profile images - users can only access their own images
    match /users/{userId}/profile/{imageId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidImageFile();
      allow delete: if isOwner(userId);
    }
    
    // User documents (ID verification, etc.) - users can only access their own documents
    match /users/{userId}/documents/{documentId} {
      allow read, write: if isOwner(userId) && isValidDocumentFile();
      allow delete: if isOwner(userId);
    }
    
    // Trip related images (receipts, photos, etc.)
    match /trips/{tripId}/images/{imageId} {
      allow read: if isAuthenticated(); // Any authenticated user can view trip images
      allow write: if isAuthenticated() && isValidImageFile();
      allow delete: if false; // Trip images cannot be deleted by users
    }
    
    // Feedback images
    match /feedback/{feedbackId}/images/{imageId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImageFile();
      allow delete: if false; // Feedback images cannot be deleted
    }
    
    // Support ticket attachments
    match /support/{ticketId}/attachments/{attachmentId} {
      allow read, write: if isAuthenticated() && isValidDocumentFile();
      allow delete: if false; // Support attachments cannot be deleted
    }
    
    // Temporary uploads folder - for processing before moving to final location
    match /temp/{userId}/{fileName} {
      allow read, write: if isOwner(userId) && 
                          (isValidImageFile() || isValidDocumentFile());
      allow delete: if isOwner(userId);
    }
    
    // App assets - read-only for all authenticated users
    match /app-assets/{assetPath=**} {
      allow read: if isAuthenticated();
      allow write: if false;
    }
    
    // Safety alert images - read-only for all authenticated users
    match /safety-alerts/{alertId}/{imageId} {
      allow read: if isAuthenticated();
      allow write: if false; // Managed by backend
    }
    
    // Default deny rule
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
